[build-system]
requires = ["setuptools>=70", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nmanga"
description = "A collection of CLI function to process a manga releases."
readme = "README.md"
dynamic = ["version"]
license = {text = "MIT"}
requires-python = ">=3.10"
authors = [{name = "noaione", email = "noaione@n4o.xyz"}]
keywords = ["manga", "colorlevel", "spreads", "auto-splitting", "processing", "cbz", "comic"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Other Audience",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Topic :: Utilities",
]
dependencies = [
    "rich==14.2.0",
    "inquirer==3.4.1",
    "click==8.3.0",
    "ftfy==6.3.1",
    "pydantic==2.12.3",
    "typing-extensions==4.15.0",
    "Pillow==12.0.0",
    "lxml==6.0.2",
    "unrar2-cffi==0.4.1",
    "py7zr==1.0.0",
    "pymupdf==1.26.5",
    "defusedxml==0.7.1",
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.2",
    "pytest-cov==7.0.0",
    "ruff==0.14.1",
]
autostuff = [
    "numpy==2.2.6",
    "scipy==1.15.3",
]
denoiser = [
    "numpy==2.2.6",
    "onnxruntime==1.22.1",
    "onnxruntime-gpu==1.22.0; platform_system == 'Windows' and platform_machine == 'x86_64'",
    "einops==0.8.1"
]

[tool.setuptools.dynamic]
version = {attr = "nmanga._metadata.__version__"}

[project.urls]
"Bug Reports" = "https://github.com/noaione/nao-manga-rls/issues"
"Source" = "https://github.com/noaione/nao-manga-rls"

[project.scripts]
nmanga = "nmanga.cmd:main"

[tool.setuptools]
packages = ["nmanga", "nmanga.cli", "nmanga.templates", "nmanga.orchestrator", "nmanga.orchestrator.actions"]

[tool.ruff]
line-length = 120
extend-exclude = [
    "env",
    "venv",
    ".pytest_cache",
    ".venv",
    "__pycache__",
    ".git",
    ".mypy_cache",
    ".vscode",
    ".ruff_cache",
    "**/Lib/**",
    "dist",
    "build",
    "_templates",
    "tools",
]
target-version = "py310"
src = ["nmanga", "tests", "ci"]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "W",
    "I",
    "N",
    "S",
    "B",
    "T",
    "Q",
    "D",
    "RUF",
    "COM",
    "PTH",
    "ASYNC"
]
ignore = [
    "E203",
    "F405",
    "F403",
    "F722",
    "N806",
    "COM812",
    "D400",  # first line should be period, most of my docstring will be LICENSE header so no thanks
    "D202",
    "D401",
    "CPY",
]
preview = true
extend-ignore = ["D", "S603", "S404", "T201"] # D -> Docstring missing for public function or method

[tool.ruff.lint.pydocstyle]
convention = "numpy"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.isort]
combine-as-imports = false
split-on-trailing-comma = true
required-imports = ["from __future__ import annotations"]
known-first-party = ["tests", "tosho_mango"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403", "I002", "D205"]
"tests/*.py" = ["S101", "I002", "D"]  # assert statement used in pytest
"pipelines/*" = ["T", "I", "S603", "D"]
"tools/*.py" = ["D100", "T201", "I002"]

[tool.pyright]
exclude = [
    ".vscode/*",
    "tests/*",
    "_templates/**/*",
    "build/**/*",
    "dist",
    ".venv",
    "venv",
    "env"
]
