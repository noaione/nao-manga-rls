{
    "$defs": {
        "ActionAutolevel": {
            "additionalProperties": false,
            "description": "Action to auto level all images in a volume with Pillow\n\nThis version is \"smarter\" than the CLI version:\n- It would force convert the image to grayscale for half-tones/b&w images before processing\n- All tagged color images will be leveled in keep colorspace mode",
            "properties": {
                "conditions": {
                    "anyOf": [
                        {
                            "discriminator": {
                                "mapping": {
                                    "and": "#/$defs/AndModel",
                                    "condition": "#/$defs/ConditionModel",
                                    "not": "#/$defs/NotModel",
                                    "or": "#/$defs/OrModel"
                                },
                                "propertyName": "op"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/$defs/ConditionModel"
                                },
                                {
                                    "$ref": "#/$defs/AndModel"
                                },
                                {
                                    "$ref": "#/$defs/OrModel"
                                },
                                {
                                    "$ref": "#/$defs/NotModel"
                                }
                            ],
                            "title": "Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Conditions to run the action"
                },
                "kind": {
                    "const": "autolevel",
                    "default": "autolevel",
                    "title": "Auto Level Images Action",
                    "type": "string"
                },
                "base_path": {
                    "default": "leveled",
                    "format": "path",
                    "title": "Output Base Path",
                    "type": "string"
                },
                "upper_limit": {
                    "default": 60,
                    "maximum": 255,
                    "minimum": 1,
                    "title": "Upper Limit for Peak Finding",
                    "type": "integer"
                },
                "peak_offset": {
                    "default": 0,
                    "maximum": 20,
                    "minimum": -20,
                    "title": "Peak Offset",
                    "type": "integer"
                },
                "min_peak_pct": {
                    "default": 0.25,
                    "maximum": 100.0,
                    "minimum": 0.0,
                    "title": "Minimum Pixels Peak Percentage",
                    "type": "number"
                },
                "skip_white": {
                    "default": true,
                    "title": "Skip White Levels During Peak Finding",
                    "type": "boolean"
                },
                "skip_color": {
                    "default": false,
                    "title": "Skip Color Images",
                    "type": "boolean"
                },
                "threads": {
                    "minimum": 1,
                    "title": "Processing Threads",
                    "type": "integer"
                }
            },
            "title": "nmanga Orchestrator - Auto Level Images Action",
            "type": "object"
        },
        "ActionColorJpegify": {
            "additionalProperties": false,
            "description": "Action to convert color images to JPEG format with cjpegli",
            "properties": {
                "conditions": {
                    "anyOf": [
                        {
                            "discriminator": {
                                "mapping": {
                                    "and": "#/$defs/AndModel",
                                    "condition": "#/$defs/ConditionModel",
                                    "not": "#/$defs/NotModel",
                                    "or": "#/$defs/OrModel"
                                },
                                "propertyName": "op"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/$defs/ConditionModel"
                                },
                                {
                                    "$ref": "#/$defs/AndModel"
                                },
                                {
                                    "$ref": "#/$defs/OrModel"
                                },
                                {
                                    "$ref": "#/$defs/NotModel"
                                }
                            ],
                            "title": "Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Conditions to run the action"
                },
                "kind": {
                    "const": "color_jpegify",
                    "default": "color_jpegify",
                    "title": "Jpegify Color Images Action",
                    "type": "string"
                },
                "base_path": {
                    "anyOf": [
                        {
                            "format": "path",
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Output Base Path"
                },
                "quality": {
                    "default": 95,
                    "maximum": 100,
                    "minimum": 1,
                    "title": "JPEG Quality",
                    "type": "integer"
                },
                "source_path": {
                    "default": "colors",
                    "format": "path",
                    "title": "Source Path",
                    "type": "string"
                },
                "threads": {
                    "minimum": 1,
                    "title": "Processing Threads",
                    "type": "integer"
                }
            },
            "title": "nmanga Orchestrator - Jpegify Color Images Action",
            "type": "object"
        },
        "ActionDenoise": {
            "additionalProperties": false,
            "description": "Action to denoise all images in a volume with denoise-trt",
            "properties": {
                "conditions": {
                    "anyOf": [
                        {
                            "discriminator": {
                                "mapping": {
                                    "and": "#/$defs/AndModel",
                                    "condition": "#/$defs/ConditionModel",
                                    "not": "#/$defs/NotModel",
                                    "or": "#/$defs/OrModel"
                                },
                                "propertyName": "op"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/$defs/ConditionModel"
                                },
                                {
                                    "$ref": "#/$defs/AndModel"
                                },
                                {
                                    "$ref": "#/$defs/OrModel"
                                },
                                {
                                    "$ref": "#/$defs/NotModel"
                                }
                            ],
                            "title": "Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Conditions to run the action"
                },
                "kind": {
                    "const": "denoise",
                    "default": "denoise",
                    "title": "Denoise Images Action",
                    "type": "string"
                },
                "model": {
                    "format": "path",
                    "title": "The ONNX Model Path",
                    "type": "string"
                },
                "base_path": {
                    "default": "denoised",
                    "format": "path",
                    "title": "Output Base Path",
                    "type": "string"
                },
                "device_id": {
                    "default": 0,
                    "minimum": 0,
                    "title": "Device ID",
                    "type": "integer"
                },
                "batch_size": {
                    "default": 64,
                    "minimum": 1,
                    "title": "Batch Size",
                    "type": "integer"
                },
                "tile_size": {
                    "default": 128,
                    "minimum": 64,
                    "title": "Tile Size",
                    "type": "integer"
                },
                "background": {
                    "default": "black",
                    "enum": [
                        "white",
                        "black"
                    ],
                    "title": "Padding Background Color",
                    "type": "string"
                },
                "contrast_strectch": {
                    "default": false,
                    "title": "Contrast Stretch After Denoising",
                    "type": "boolean"
                }
            },
            "required": [
                "model"
            ],
            "title": "nmanga Orchestrator - Denoise Images Action",
            "type": "object"
        },
        "ActionInterrupt": {
            "additionalProperties": false,
            "description": "Action to interrupt the action chain\n\nThis will \"pause\" the action chain in-place, this would also allow you to quit the action chain",
            "properties": {
                "conditions": {
                    "anyOf": [
                        {
                            "discriminator": {
                                "mapping": {
                                    "and": "#/$defs/AndModel",
                                    "condition": "#/$defs/ConditionModel",
                                    "not": "#/$defs/NotModel",
                                    "or": "#/$defs/OrModel"
                                },
                                "propertyName": "op"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/$defs/ConditionModel"
                                },
                                {
                                    "$ref": "#/$defs/AndModel"
                                },
                                {
                                    "$ref": "#/$defs/OrModel"
                                },
                                {
                                    "$ref": "#/$defs/NotModel"
                                }
                            ],
                            "title": "Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Conditions to run the action"
                },
                "kind": {
                    "const": "interrupt",
                    "default": "interrupt",
                    "title": "Kind",
                    "type": "string"
                },
                "whole_chain": {
                    "default": true,
                    "title": "Interrupt Whole Chain",
                    "type": "boolean"
                }
            },
            "title": "nmanga Orchestrator - Interrupt Action",
            "type": "object"
        },
        "ActionMoveColor": {
            "additionalProperties": false,
            "description": "Action to move the tagged color images to a separate folder\n\nEverything would be derived from the main config so they are not included here.",
            "properties": {
                "conditions": {
                    "anyOf": [
                        {
                            "discriminator": {
                                "mapping": {
                                    "and": "#/$defs/AndModel",
                                    "condition": "#/$defs/ConditionModel",
                                    "not": "#/$defs/NotModel",
                                    "or": "#/$defs/OrModel"
                                },
                                "propertyName": "op"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/$defs/ConditionModel"
                                },
                                {
                                    "$ref": "#/$defs/AndModel"
                                },
                                {
                                    "$ref": "#/$defs/OrModel"
                                },
                                {
                                    "$ref": "#/$defs/NotModel"
                                }
                            ],
                            "title": "Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Conditions to run the action"
                },
                "kind": {
                    "const": "move_color",
                    "default": "move_color",
                    "title": "Move Color Images Action",
                    "type": "string"
                },
                "base_path": {
                    "default": "colors",
                    "format": "path",
                    "title": "Output Base Path",
                    "type": "string"
                }
            },
            "title": "nmanga Orchestrator - Move Color Images Action",
            "type": "object"
        },
        "ActionOptimize": {
            "additionalProperties": false,
            "description": "Optimize all images in a volume with pingo",
            "properties": {
                "conditions": {
                    "anyOf": [
                        {
                            "discriminator": {
                                "mapping": {
                                    "and": "#/$defs/AndModel",
                                    "condition": "#/$defs/ConditionModel",
                                    "not": "#/$defs/NotModel",
                                    "or": "#/$defs/OrModel"
                                },
                                "propertyName": "op"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/$defs/ConditionModel"
                                },
                                {
                                    "$ref": "#/$defs/AndModel"
                                },
                                {
                                    "$ref": "#/$defs/OrModel"
                                },
                                {
                                    "$ref": "#/$defs/NotModel"
                                }
                            ],
                            "title": "Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Conditions to run the action"
                },
                "kind": {
                    "const": "optimize",
                    "default": "optimize",
                    "title": "Optimize Images Action",
                    "type": "string"
                },
                "aggresive": {
                    "default": false,
                    "title": "Aggressive Mode",
                    "type": "boolean"
                },
                "limiter": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "examples": [
                        ".png",
                        ".jpg"
                    ],
                    "title": "Limiter"
                }
            },
            "title": "nmanga Orchestrator - Optimize Images Action",
            "type": "object"
        },
        "ActionPack": {
            "additionalProperties": false,
            "description": "Action to pack the volume into an archive",
            "properties": {
                "conditions": {
                    "anyOf": [
                        {
                            "discriminator": {
                                "mapping": {
                                    "and": "#/$defs/AndModel",
                                    "condition": "#/$defs/ConditionModel",
                                    "not": "#/$defs/NotModel",
                                    "or": "#/$defs/OrModel"
                                },
                                "propertyName": "op"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/$defs/ConditionModel"
                                },
                                {
                                    "$ref": "#/$defs/AndModel"
                                },
                                {
                                    "$ref": "#/$defs/OrModel"
                                },
                                {
                                    "$ref": "#/$defs/NotModel"
                                }
                            ],
                            "title": "Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Conditions to run the action"
                },
                "kind": {
                    "const": "pack",
                    "default": "pack",
                    "title": "Pack Action",
                    "type": "string"
                },
                "output_mode": {
                    "$ref": "#/$defs/ExporterType",
                    "default": "cbz",
                    "title": "Output Mode"
                },
                "source_dir": {
                    "anyOf": [
                        {
                            "format": "path",
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Source Directory"
                },
                "compress_level": {
                    "default": 7,
                    "maximum": 9,
                    "minimum": 0,
                    "title": "Compression Level",
                    "type": "integer"
                }
            },
            "title": "nmanga Orchestrator - Pack Action",
            "type": "object"
        },
        "ActionPosterize": {
            "additionalProperties": false,
            "description": "Action to posterize all images in a volume with imagemagick or Pillow",
            "properties": {
                "conditions": {
                    "anyOf": [
                        {
                            "discriminator": {
                                "mapping": {
                                    "and": "#/$defs/AndModel",
                                    "condition": "#/$defs/ConditionModel",
                                    "not": "#/$defs/NotModel",
                                    "or": "#/$defs/OrModel"
                                },
                                "propertyName": "op"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/$defs/ConditionModel"
                                },
                                {
                                    "$ref": "#/$defs/AndModel"
                                },
                                {
                                    "$ref": "#/$defs/OrModel"
                                },
                                {
                                    "$ref": "#/$defs/NotModel"
                                }
                            ],
                            "title": "Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Conditions to run the action"
                },
                "kind": {
                    "const": "posterize",
                    "default": "posterize",
                    "title": "Posterize Images Action",
                    "type": "string"
                },
                "base_path": {
                    "default": "posterized",
                    "format": "path",
                    "title": "Output Base Path",
                    "type": "string"
                },
                "bpc": {
                    "default": 4,
                    "examples": [
                        1,
                        2,
                        4,
                        8
                    ],
                    "maximum": 8,
                    "minimum": 1,
                    "title": "Bits Per Channel",
                    "type": "integer"
                },
                "pillow": {
                    "default": false,
                    "title": "Use Python Pillow",
                    "type": "boolean"
                },
                "threads": {
                    "minimum": 1,
                    "title": "Processing Threads",
                    "type": "integer"
                }
            },
            "title": "nmanga Orchestrator - Posterize Images Action",
            "type": "object"
        },
        "ActionRename": {
            "additionalProperties": false,
            "description": "Action to rename all images in a volume\n\nThis use the daiz-like renaming scheme.\n\nAll the other options are derived from the main config so they are not included here.",
            "properties": {
                "conditions": {
                    "anyOf": [
                        {
                            "discriminator": {
                                "mapping": {
                                    "and": "#/$defs/AndModel",
                                    "condition": "#/$defs/ConditionModel",
                                    "not": "#/$defs/NotModel",
                                    "or": "#/$defs/OrModel"
                                },
                                "propertyName": "op"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/$defs/ConditionModel"
                                },
                                {
                                    "$ref": "#/$defs/AndModel"
                                },
                                {
                                    "$ref": "#/$defs/OrModel"
                                },
                                {
                                    "$ref": "#/$defs/NotModel"
                                }
                            ],
                            "title": "Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Conditions to run the action"
                },
                "kind": {
                    "const": "rename",
                    "default": "rename",
                    "title": "Daiz-like Rename Images Action",
                    "type": "string"
                },
                "title": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Title of the Series"
                }
            },
            "title": "nmanga Orchestrator - Daiz-like Rename Images Action",
            "type": "object"
        },
        "ActionShiftName": {
            "additionalProperties": false,
            "description": "Action to shift rename of a volume\n\nTitle and volume are derived from the main config so they are not included here.",
            "properties": {
                "conditions": {
                    "anyOf": [
                        {
                            "discriminator": {
                                "mapping": {
                                    "and": "#/$defs/AndModel",
                                    "condition": "#/$defs/ConditionModel",
                                    "not": "#/$defs/NotModel",
                                    "or": "#/$defs/OrModel"
                                },
                                "propertyName": "op"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/$defs/ConditionModel"
                                },
                                {
                                    "$ref": "#/$defs/AndModel"
                                },
                                {
                                    "$ref": "#/$defs/OrModel"
                                },
                                {
                                    "$ref": "#/$defs/NotModel"
                                }
                            ],
                            "title": "Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Conditions to run the action"
                },
                "kind": {
                    "const": "shift_rename",
                    "default": "shift_rename",
                    "title": "Simple Shift Renamer Action",
                    "type": "string"
                },
                "start": {
                    "default": 0,
                    "minimum": 0,
                    "title": "Starting Index",
                    "type": "integer"
                },
                "title": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Title of the Series"
                }
            },
            "title": "nmanga Orchestrator - Simple Shift Renamer Action",
            "type": "object"
        },
        "ActionSpreads": {
            "additionalProperties": false,
            "description": "Action to join spreads of a volume",
            "properties": {
                "conditions": {
                    "anyOf": [
                        {
                            "discriminator": {
                                "mapping": {
                                    "and": "#/$defs/AndModel",
                                    "condition": "#/$defs/ConditionModel",
                                    "not": "#/$defs/NotModel",
                                    "or": "#/$defs/OrModel"
                                },
                                "propertyName": "op"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/$defs/ConditionModel"
                                },
                                {
                                    "$ref": "#/$defs/AndModel"
                                },
                                {
                                    "$ref": "#/$defs/OrModel"
                                },
                                {
                                    "$ref": "#/$defs/NotModel"
                                }
                            ],
                            "title": "Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Conditions to run the action"
                },
                "kind": {
                    "const": "spreads",
                    "default": "spreads",
                    "title": "Image Spreads Joiner Action",
                    "type": "string"
                },
                "direction": {
                    "$ref": "#/$defs/SpreadDirection",
                    "default": "ltr",
                    "title": "Spread Direction"
                },
                "quality": {
                    "default": 100.0,
                    "maximum": 100.0,
                    "minimum": 1.0,
                    "title": "Output Quality",
                    "type": "number"
                },
                "output_fmt": {
                    "default": "auto",
                    "enum": [
                        "auto",
                        "jpg",
                        "png"
                    ],
                    "title": "Output Format",
                    "type": "string"
                },
                "pillow": {
                    "default": false,
                    "title": "Use Python Pillow",
                    "type": "boolean"
                },
                "threads": {
                    "minimum": 1,
                    "title": "Processing Threads",
                    "type": "integer"
                }
            },
            "title": "nmanga Orchestrator - Image Spreads Joiner Action",
            "type": "object"
        },
        "ActionTagging": {
            "additionalProperties": false,
            "description": "Action to add metadata tags to the images with exiftool\n\nEverything would be derived from the main config so they are not included here.",
            "properties": {
                "conditions": {
                    "anyOf": [
                        {
                            "discriminator": {
                                "mapping": {
                                    "and": "#/$defs/AndModel",
                                    "condition": "#/$defs/ConditionModel",
                                    "not": "#/$defs/NotModel",
                                    "or": "#/$defs/OrModel"
                                },
                                "propertyName": "op"
                            },
                            "oneOf": [
                                {
                                    "$ref": "#/$defs/ConditionModel"
                                },
                                {
                                    "$ref": "#/$defs/AndModel"
                                },
                                {
                                    "$ref": "#/$defs/OrModel"
                                },
                                {
                                    "$ref": "#/$defs/NotModel"
                                }
                            ],
                            "title": "Rule"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Conditions to run the action"
                },
                "kind": {
                    "const": "tagging",
                    "default": "tagging",
                    "title": "Image Tagging Action",
                    "type": "string"
                },
                "title": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Override Title"
                }
            },
            "title": "nmanga Orchestrator - Image Tagging Action",
            "type": "object"
        },
        "AndModel": {
            "description": "Pydantic model for a logical AND.\n\nThis will be converted to an `And` DSL object.",
            "properties": {
                "op": {
                    "const": "and",
                    "title": "Operator",
                    "type": "string"
                },
                "rules": {
                    "items": {
                        "discriminator": {
                            "mapping": {
                                "and": "#/$defs/AndModel",
                                "condition": "#/$defs/ConditionModel",
                                "not": "#/$defs/NotModel",
                                "or": "#/$defs/OrModel"
                            },
                            "propertyName": "op"
                        },
                        "oneOf": [
                            {
                                "$ref": "#/$defs/ConditionModel"
                            },
                            {
                                "$ref": "#/$defs/AndModel"
                            },
                            {
                                "$ref": "#/$defs/OrModel"
                            },
                            {
                                "$ref": "#/$defs/NotModel"
                            }
                        ],
                        "title": "Rule"
                    },
                    "minItems": 1,
                    "title": "Sub-rules",
                    "type": "array"
                }
            },
            "required": [
                "op",
                "rules"
            ],
            "title": "AndModel",
            "type": "object"
        },
        "ChapterConfig": {
            "additionalProperties": false,
            "description": "The configuration for a chapter",
            "properties": {
                "number": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "ge": 0.0,
                    "title": "Chapter Number"
                },
                "title": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Chapter Title"
                },
                "start": {
                    "minimum": 0,
                    "title": "Starting Page Number",
                    "type": "integer"
                },
                "end": {
                    "anyOf": [
                        {
                            "minimum": 1,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Ending Page Number"
                }
            },
            "required": [
                "number",
                "start"
            ],
            "title": "nmanga Orchestrator Chapter Configuration",
            "type": "object"
        },
        "ConditionModel": {
            "description": "Pydantic model for a simple condition.\n\nThis will be converted to a `Condition` DSL object.\n\nThe `value` field can either be a direct value (str, int, etc.)\nor a reference to another context variable using the format \"ctx:variable_name\".",
            "properties": {
                "op": {
                    "const": "condition",
                    "title": "Operator",
                    "type": "string"
                },
                "field": {
                    "title": "Field",
                    "type": "string"
                },
                "operator": {
                    "title": "Operator Type",
                    "type": "string"
                },
                "value": {
                    "examples": [
                        "ctx:other_variable",
                        42,
                        "some_string"
                    ],
                    "title": "Value"
                }
            },
            "required": [
                "op",
                "field",
                "operator",
                "value"
            ],
            "title": "ConditionModel",
            "type": "object"
        },
        "ExporterType": {
            "description": "The type of exporter to use.",
            "enum": [
                "folder",
                "cbz",
                "cb7",
                "epub"
            ],
            "title": "ExporterType",
            "type": "string"
        },
        "MetadataNamingConfig": {
            "additionalProperties": false,
            "description": "The configuration for metadata naming\n\nThis is used to add extra metadata to the filename, e.g. [Cover], [ToC], etc.",
            "properties": {
                "tag": {
                    "title": "Metadata Tag",
                    "type": "string"
                },
                "page": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        }
                    ],
                    "title": "Page Number"
                }
            },
            "required": [
                "tag",
                "page"
            ],
            "title": "MetadataNamingConfig",
            "type": "object"
        },
        "NotModel": {
            "description": "Pydantic model for a logical NOT.\n\nThis will be converted to a `Not` DSL object.",
            "properties": {
                "op": {
                    "const": "not",
                    "title": "Operator",
                    "type": "string"
                },
                "rule": {
                    "discriminator": {
                        "mapping": {
                            "and": "#/$defs/AndModel",
                            "condition": "#/$defs/ConditionModel",
                            "not": "#/$defs/NotModel",
                            "or": "#/$defs/OrModel"
                        },
                        "propertyName": "op"
                    },
                    "oneOf": [
                        {
                            "$ref": "#/$defs/ConditionModel"
                        },
                        {
                            "$ref": "#/$defs/AndModel"
                        },
                        {
                            "$ref": "#/$defs/OrModel"
                        },
                        {
                            "$ref": "#/$defs/NotModel"
                        }
                    ],
                    "title": "Sub-rule"
                }
            },
            "required": [
                "op",
                "rule"
            ],
            "title": "NotModel",
            "type": "object"
        },
        "OrModel": {
            "description": "Pydantic model for a logical OR.\n\nThis will be converted to a `Or` DSL object.",
            "properties": {
                "op": {
                    "const": "or",
                    "title": "Operator",
                    "type": "string"
                },
                "rules": {
                    "items": {
                        "discriminator": {
                            "mapping": {
                                "and": "#/$defs/AndModel",
                                "condition": "#/$defs/ConditionModel",
                                "not": "#/$defs/NotModel",
                                "or": "#/$defs/OrModel"
                            },
                            "propertyName": "op"
                        },
                        "oneOf": [
                            {
                                "$ref": "#/$defs/ConditionModel"
                            },
                            {
                                "$ref": "#/$defs/AndModel"
                            },
                            {
                                "$ref": "#/$defs/OrModel"
                            },
                            {
                                "$ref": "#/$defs/NotModel"
                            }
                        ],
                        "title": "Rule"
                    },
                    "minItems": 1,
                    "title": "Sub-rules",
                    "type": "array"
                }
            },
            "required": [
                "op",
                "rules"
            ],
            "title": "OrModel",
            "type": "object"
        },
        "SkipActionConfig": {
            "additionalProperties": false,
            "description": "What actions to skip for a volume\n\nNote: Not all actions support skipping, those that do not will be ignored",
            "properties": {
                "action": {
                    "$ref": "#/$defs/SkipActionKind",
                    "title": "Skip Action"
                },
                "step": {
                    "examples": [
                        "autolevel-1",
                        "optimize-1",
                        "optimize-2"
                    ],
                    "title": "Action Step Name",
                    "type": "string"
                },
                "pages": {
                    "items": {
                        "type": "integer"
                    },
                    "minItems": 1,
                    "title": "Pages to Skip On",
                    "type": "array"
                }
            },
            "required": [
                "action",
                "step",
                "pages"
            ],
            "title": "SkipActionConfig",
            "type": "object"
        },
        "SkipActionKind": {
            "description": "What do you want to do when skipping an action",
            "enum": [
                "ignore",
                "copy",
                "move"
            ],
            "title": "SkipActionKind",
            "type": "string"
        },
        "SpreadDirection": {
            "description": "The direction of the spread to join images.",
            "enum": [
                "ltr",
                "rtl"
            ],
            "title": "SpreadDirection",
            "type": "string"
        },
        "VolumeConfig": {
            "additionalProperties": false,
            "description": "The configuration for a volume",
            "properties": {
                "path": {
                    "format": "path",
                    "title": "Volume Directory",
                    "type": "string"
                },
                "number": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "title": "Volume Number"
                },
                "year": {
                    "maximum": 9999,
                    "minimum": 1000,
                    "title": "Volume Year",
                    "type": "integer"
                },
                "oneshot": {
                    "default": false,
                    "title": "Is Oneshot",
                    "type": "boolean"
                },
                "spreads": {
                    "examples": [
                        [
                            [
                                1,
                                2
                            ],
                            [
                                5,
                                6
                            ],
                            [
                                13,
                                15
                            ]
                        ]
                    ],
                    "items": {
                        "maxItems": 2,
                        "minItems": 2,
                        "prefixItems": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "integer"
                            }
                        ],
                        "type": "array"
                    },
                    "title": "Volume Spreads",
                    "type": "array"
                },
                "colors": {
                    "examples": [
                        [
                            0
                        ]
                    ],
                    "items": {
                        "type": "integer"
                    },
                    "title": "Volume Color Pages",
                    "type": "array"
                },
                "meta_naming": {
                    "items": {
                        "$ref": "#/$defs/MetadataNamingConfig"
                    },
                    "title": "Metadata Naming Configurations",
                    "type": "array"
                },
                "chapters": {
                    "items": {
                        "$ref": "#/$defs/ChapterConfig"
                    },
                    "title": "Volume Chapters",
                    "type": "array"
                },
                "extra_text": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "examples": [
                        "Omnibus",
                        "2-in-1 Edition",
                        "PNG4"
                    ],
                    "title": "Extra Text"
                },
                "revision": {
                    "default": 1,
                    "minimum": 1,
                    "title": "Volume Revision Number",
                    "type": "integer"
                },
                "quality": {
                    "anyOf": [
                        {
                            "enum": [
                                "LQ",
                                "HQ"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Volume Quality"
                },
                "pub_type": {
                    "default": "digital",
                    "examples": [
                        "digital",
                        "magazine",
                        "scan",
                        "web",
                        "digital-raw",
                        "magazine-raw",
                        "mix",
                        "none"
                    ],
                    "title": "Publication Type",
                    "type": "string"
                },
                "skip_actions": {
                    "items": {
                        "$ref": "#/$defs/SkipActionConfig"
                    },
                    "title": "Skip Actions Configurations",
                    "type": "array"
                }
            },
            "required": [
                "path",
                "number"
            ],
            "title": "nmanga Orchestrator Volume Configuration",
            "type": "object"
        }
    },
    "description": "The configuration for the orchestrator",
    "properties": {
        "title": {
            "examples": [
                "I Want to Love You Till Your Dying Day"
            ],
            "title": "Manga Title",
            "type": "string"
        },
        "publisher": {
            "examples": [
                "Kodansha Comics"
            ],
            "title": "Manga Publisher",
            "type": "string"
        },
        "credit": {
            "examples": [
                "Ripper"
            ],
            "title": "Ripper Credit",
            "type": "string"
        },
        "email": {
            "examples": [
                "ripper-mail@example.com"
            ],
            "title": "Ripper Email",
            "type": "string"
        },
        "bracket_type": {
            "default": "round",
            "enum": [
                "square",
                "round",
                "curly"
            ],
            "title": "Bracket Type in Filename",
            "type": "string"
        },
        "base_path": {
            "default": "source",
            "format": "path",
            "title": "Base Path",
            "type": "string"
        },
        "volumes": {
            "items": {
                "$ref": "#/$defs/VolumeConfig"
            },
            "minItems": 1,
            "title": "Volumes",
            "type": "array"
        },
        "actions": {
            "items": {
                "description": "The collection of all supported actions.",
                "discriminator": {
                    "mapping": {
                        "autolevel": "#/$defs/ActionAutolevel",
                        "color_jpegify": "#/$defs/ActionColorJpegify",
                        "denoise": "#/$defs/ActionDenoise",
                        "interrupt": "#/$defs/ActionInterrupt",
                        "move_color": "#/$defs/ActionMoveColor",
                        "optimize": "#/$defs/ActionOptimize",
                        "pack": "#/$defs/ActionPack",
                        "posterize": "#/$defs/ActionPosterize",
                        "rename": "#/$defs/ActionRename",
                        "shift_rename": "#/$defs/ActionShiftName",
                        "spreads": "#/$defs/ActionSpreads",
                        "tagging": "#/$defs/ActionTagging"
                    },
                    "propertyName": "kind"
                },
                "oneOf": [
                    {
                        "$ref": "#/$defs/ActionShiftName"
                    },
                    {
                        "$ref": "#/$defs/ActionSpreads"
                    },
                    {
                        "$ref": "#/$defs/ActionRename"
                    },
                    {
                        "$ref": "#/$defs/ActionDenoise"
                    },
                    {
                        "$ref": "#/$defs/ActionAutolevel"
                    },
                    {
                        "$ref": "#/$defs/ActionPosterize"
                    },
                    {
                        "$ref": "#/$defs/ActionOptimize"
                    },
                    {
                        "$ref": "#/$defs/ActionTagging"
                    },
                    {
                        "$ref": "#/$defs/ActionMoveColor"
                    },
                    {
                        "$ref": "#/$defs/ActionColorJpegify"
                    },
                    {
                        "$ref": "#/$defs/ActionPack"
                    },
                    {
                        "$ref": "#/$defs/ActionInterrupt"
                    }
                ]
            },
            "minItems": 1,
            "title": "Actions",
            "type": "array"
        }
    },
    "required": [
        "title",
        "publisher",
        "credit",
        "email"
    ],
    "title": "nmanga Orchestrator Configuration",
    "type": "object"
}